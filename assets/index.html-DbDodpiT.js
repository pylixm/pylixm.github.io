import{_ as i,c as e,a,o as t}from"./app-DdES4ywf.js";const n={};function l(r,s){return t(),e("div",null,[...s[0]||(s[0]=[a(`<p>在使用django restful 时，遇到的几个不好发现的问题，记录如下备查。</p><h2 id="一、-缓存问题" tabindex="-1"><a class="header-anchor" href="#一、-缓存问题"><span>一、 缓存问题</span></a></h2><p>在系统与外部系统以http接口的方式做交互时，发现我们使用drf（django restfreamwork）框架实现的接口数据多次调用获取到的数据值不一致。</p><p>首先，我们想到的是缓存，但是经过排查，系统中并没有使用外部的缓存。那么既有可能是drf 内部有缓存机制，于是去官方文档查阅。最后找到了这样的描述：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">get_queryset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Returns the queryset that should be used </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> list</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> views</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> and</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> that should be used </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> the base </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> lookups </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">in</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> detail views</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Defaults to returning the queryset specified by the queryset attribute</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">This method should always be used rather than accessing </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">queryset directly</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">queryset gets evaluated only once</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> and</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> those results are cached </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> all</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> subsequent requests</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>get_queryset</code> 这个函数会缓存数据列表，当数据列表有更新时，再次查询数据便造成了数据的不一致。</p><p>重写此方便可以根据request 来给 view 提供不同的queryset，但是翻遍了官方文档，查看了源码仍然没有找到一个既可以重写此方法又可以不缓存的方案，此方法还是慎用。</p><p>总结，views 中 get_queryset 可以根据request来个性化的定制queryset，但会缓存数据，可能造成数据不一致风险。</p><p>大批量数据且改动比较少的数据，可使用此方法。改动比较频繁的数据列表，误用此方法。</p><h2 id="二、自带的seralizer继承-hyperlinkedmodelserializer时钻取问题" tabindex="-1"><a class="header-anchor" href="#二、自带的seralizer继承-hyperlinkedmodelserializer时钻取问题"><span>二、自带的seralizer继承 HyperlinkedModelSerializer时钻取问题</span></a></h2><p>当序列化类为HyperlinkedModelSerializer类型时，注意钻取的深度。当设计到django自带的model时,比如User表的权限model，需要注意，会报：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Could </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">not</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> resolve </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">URL</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> for</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> hyperlinked relationship using view name </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">permission-detail</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">You may have failed to include the related model </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">in</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> your </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">API</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> or</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> incorrectly configured the </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">\`lookup_field\`</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> attribute on this field</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>此处设计到用户权限表，实际生产中此表肯定是不能暴露给接口外部的。所以，此处没有再进一步深究。想来，重写或显示的写出model，应该是有办法解决的。</p><p>总结，序列化类编写时，注意类型的合理应用。使用链接钻取类时，注意深度，避免不必要的错误。</p><h1 id="todo-待续" tabindex="-1"><a class="header-anchor" href="#todo-待续"><span>todo 待续</span></a></h1><hr><h4 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考：</span></a></h4><ul><li><a href="http://www.django-rest-framework.org/" target="_blank" rel="noopener noreferrer">http://www.django-rest-framework.org/</a></li></ul>`,18)])])}const p=i(n,[["render",l]]),k=JSON.parse('{"path":"/pages/fb829d/","title":"Django restful framework 使用笔记 -- 踩坑记录 - Restful","lang":"zh-CN","frontmatter":{"title":"Django restful framework 使用笔记 -- 踩坑记录 - Restful","tags":["Django","Restful"],"permalink":"/pages/fb829d/","createTime":"2023/09/08 17:36:02","description":"在使用django restful 时，遇到的几个不好发现的问题，记录如下备查。 一、 缓存问题 在系统与外部系统以http接口的方式做交互时，发现我们使用drf（django restfreamwork）框架实现的接口数据多次调用获取到的数据值不一致。 首先，我们想到的是缓存，但是经过排查，系统中并没有使用外部的缓存。那么既有可能是drf 内部有缓存...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Django restful framework 使用笔记 -- 踩坑记录 - Restful\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/pages/fb829d/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"Django restful framework 使用笔记 -- 踩坑记录 - Restful"}],["meta",{"property":"og:description","content":"在使用django restful 时，遇到的几个不好发现的问题，记录如下备查。 一、 缓存问题 在系统与外部系统以http接口的方式做交互时，发现我们使用drf（django restfreamwork）框架实现的接口数据多次调用获取到的数据值不一致。 首先，我们想到的是缓存，但是经过排查，系统中并没有使用外部的缓存。那么既有可能是drf 内部有缓存..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"Restful"}],["meta",{"property":"article:tag","content":"Django"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":2.01,"words":603},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"01.开发语言/01.Python/04.Djangorestfulframework/03.Django-restfull-framework-gotcha.md","headers":[],"categoryList":[{"id":"59843f","sort":1,"name":"开发语言"},{"id":"9d2a49","sort":1,"name":"Python"},{"id":"873140","sort":4,"name":"Djangorestfulframework"}]}');export{p as comp,k as data};
