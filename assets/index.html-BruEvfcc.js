import{_ as e,c as n,a as t,b as i,e as l,w as h,r as p,o as k,d as r}from"./app-DdES4ywf.js";const d={};function o(g,s){const a=p("VPLink");return k(),n("div",null,[s[1]||(s[1]=t(`<h2 id="路由-url" tabindex="-1"><a class="header-anchor" href="#路由-url"><span>路由(URL)</span></a></h2><p>Django中有个指定url和视图函数的 urlconf 文件，组成如下：</p><ul><li>一个打头的前缀字符串，可以为空。</li><li>一个或多个由正则表达式字符串匹配一个或一组URL组成的python元组；一个视图函数对象或字符串；有时还可以带上一个视图函数的字典参数。</li></ul><p>例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">urlpatterns </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> patterns</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">	# Examples:</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">	#&#39;^$&#39; 表示为web的根目录，Django会自动去除url前的 / </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">	# &#39;djdemo02.views.home&#39; ,对应的视图函数</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">	# name 他必须在所有的url里唯一，可以在别的地方通过 name 来引用此url</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">r</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">^$</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">djdemo02.views.home</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> name=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">home</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">r</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">^$</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">djdemo02.views.home</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">home</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">urlpatterns </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">+=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> patterns</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">r</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">^</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">admin/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> include</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">admin</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">site</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">urls</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">r</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">blog/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">include</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">blog.urls</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)),</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><ol><li>多个patterns 可以使用 += 链接 ；</li><li>可以使用 include(&#39;blog.urls&#39;) 函数来包含其他的url文件 ；</li><li>动态url使用圆括号把参数在URL模式里标识 出来；</li></ol><p>例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">r</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">^</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">time/plus/</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">\\d</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">{1,2}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">/</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">$</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> hours_ahead</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http"><span>HTTP</span></a></h2><p>所有视图均接受一个来自前台的 HttpRequest对象 HttpRequest对象属性， 均为键值对 。</p><p><strong>GET、POST、REQUEST</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">GET</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #接受get请求的参数 </span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">POST</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #接收 post请求参数</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">REQUEST</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #均可；</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Cookies 、 Sessions</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#注意这俩各属性的大小写</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">request</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">COOKIES</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">request</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">session</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>其他属性</strong></p><p>只读</p><ul><li><code>path</code>：url里域名后的部分</li><li><code>method</code>：返回http的请求方法</li><li><code>encoding</code> :标明了用来解码表单的字符集</li><li><code>FILES</code>：包含了通过文件输入表单字段上传的文件</li><li><code>META</code>：它包含了所有没有被请求的其他部分处理的HTTP服务器请求变量。</li><li><code>user</code>: django的认证用户，只有你的站点激活django认证机制才有；</li><li><code>raw_post_data</code>: 请求里包含的POST原始数据。比POST更全。</li></ul><h2 id="httpresponse对象" tabindex="-1"><a class="header-anchor" href="#httpresponse对象"><span>HTTPResponse对象</span></a></h2><p>构建方法</p><pre><code>1、response = HttpResponse(&quot;&lt;html&gt;Hello word!&lt;/html&gt;&quot;)
2、response = HttpResponse()
   response.write(&quot;&lt;html&gt;&quot;)
   response.write(&quot;Hello word!&quot;)
   response.write(&quot;&lt;/html&gt;&quot;)
3、设置http头，
    response = HttpResponse()
    response[&quot;Content-Type&quot;] = &quot;text/csv&quot;
    response[&quot;Content-Length&quot;] = 256
</code></pre><h2 id="中间件" tabindex="-1"><a class="header-anchor" href="#中间件"><span>中间件</span></a></h2><pre><code>是一些python函数可以在上述过程里的多个地方执行来改变真个应用程序的输入（在请求到达视图之前对他进行修改）
输出（修改视图创建的响应）
</code></pre><h2 id="视图和逻辑" tabindex="-1"><a class="header-anchor" href="#视图和逻辑"><span>视图和逻辑</span></a></h2><h3 id="通用视图" tabindex="-1"><a class="header-anchor" href="#通用视图"><span>通用视图</span></a></h3><pre><code>todo
</code></pre><h3 id="自定义视图" tabindex="-1"><a class="header-anchor" href="#自定义视图"><span>自定义视图</span></a></h3><pre><code>todo
</code></pre>`,28)),i("p",null,[l(a,{href:"/Django-Tempalete.md"},{default:h(()=>[...s[0]||(s[0]=[r("模板篇",-1)])]),_:1})]),s[2]||(s[2]=i("h4",{id:"参考",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#参考"},[i("span",null,"参考")])],-1))])}const y=e(d,[["render",o]]),u=JSON.parse(`{"path":"/pages/4af10c/","title":"Django学习笔记-url、视图","lang":"zh-CN","frontmatter":{"title":"Django学习笔记-url、视图","tags":["django"],"permalink":"/pages/4af10c/","createTime":"2023/09/08 17:36:02","description":"路由(URL) Django中有个指定url和视图函数的 urlconf 文件，组成如下： 一个打头的前缀字符串，可以为空。 一个或多个由正则表达式字符串匹配一个或一组URL组成的python元组；一个视图函数对象或字符串；有时还可以带上一个视图函数的字典参数。 例： 注： 多个patterns 可以使用 += 链接 ； 可以使用 include('b...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Django学习笔记-url、视图\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/pages/4af10c/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"Django学习笔记-url、视图"}],["meta",{"property":"og:description","content":"路由(URL) Django中有个指定url和视图函数的 urlconf 文件，组成如下： 一个打头的前缀字符串，可以为空。 一个或多个由正则表达式字符串匹配一个或一组URL组成的python元组；一个视图函数对象或字符串；有时还可以带上一个视图函数的字典参数。 例： 注： 多个patterns 可以使用 += 链接 ； 可以使用 include('b..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"django"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":1.89,"words":566},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"01.开发语言/01.Python/02.Django/11.Django-Views.md","headers":[],"categoryList":[{"id":"59843f","sort":1,"name":"开发语言"},{"id":"9d2a49","sort":1,"name":"Python"},{"id":"f8691d","sort":2,"name":"Django"}]}`);export{y as comp,u as data};
