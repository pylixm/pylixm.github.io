import{_ as e,c as a,a as r,o as n}from"./app-DdES4ywf.js";const o={};function i(p,t){return n(),a("div",null,[...t[0]||(t[0]=[r('<blockquote><p>《数据结构与算法-王争》学习笔记，记录备查</p></blockquote><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><p>跳表，在有序链表基础上加了多级索引的数据结构。是一种<strong>动态的数据结构</strong>。</p><p>跳表是一种用空间来换时间的典型存储结构。除了正常链表节点外，还需要额外的空间来存储索引的数据。在实际的应用中，节点的数据对象往往都会非常大，而索引中并不会存储节点的所有数据，仅仅是存储了指针，这样当节点数据远远大于索引占用空间的时候，索引的空间也就可以忽略了。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="查找" tabindex="-1"><a class="header-anchor" href="#查找"><span>查找</span></a></h3><p>跳表查找的时间复杂度是O(logn)。</p><h3 id="插入和删除" tabindex="-1"><a class="header-anchor" href="#插入和删除"><span>插入和删除</span></a></h3><p>跳表的插入和删除，主要的时间耗费在查找上，所以时间复杂度都是O(logn)</p><h3 id="索引的动态更新" tabindex="-1"><a class="header-anchor" href="#索引的动态更新"><span>索引的动态更新</span></a></h3><p>当跳表的某两个索引之间的数据节点插入过多的时候，整个跳表便会变的不均衡，即第一级索引之间的原始节点数不一样。极端情况下，可能退化为单链表。此时，便需要及时的更新索引。</p><p>跳表是靠一个<strong>随机函数</strong>的返回值来决定将插入的值，添加到那几级索引的。例如，随机函数返回2，那么将插入的新加点，同时插入到第1和第2级索引中。<strong>随机函数</strong>即是和跳表的索引构建策略有关，并不是拍脑袋想出来的。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li>静态数据结构：存储空间在程序执行过程中不能加以改变，定义好之后变由系统分配了固定大小的存储空间。</li><li>动态数据结构：不确定总的数据存储量，会根据数据元素的多少，而发生变化。</li></ul><h2 id="扩展阅读" tabindex="-1"><a class="header-anchor" href="#扩展阅读"><span>扩展阅读</span></a></h2><ul><li>https://cloud.tencent.com/developer/article/1353762</li><li>https://github.com/wangzheng0822/algo</li></ul>',16)])])}const c=e(o,[["render",i]]),l=JSON.parse('{"path":"/data-structure-algorithm/4b48b5/","title":"数据结构与算法 - 线性表 - 跳表","lang":"zh-CN","frontmatter":{"title":"数据结构与算法 - 线性表 - 跳表","tags":["数据结构与算法","跳表"],"permalink":"/data-structure-algorithm/4b48b5/","createTime":"2023/09/08 17:36:02","description":"《数据结构与算法-王争》学习笔记，记录备查 基本概念 跳表，在有序链表基础上加了多级索引的数据结构。是一种动态的数据结构。 跳表是一种用空间来换时间的典型存储结构。除了正常链表节点外，还需要额外的空间来存储索引的数据。在实际的应用中，节点的数据对象往往都会非常大，而索引中并不会存储节点的所有数据，仅仅是存储了指针，这样当节点数据远远大于索引占用空间的时...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据结构与算法 - 线性表 - 跳表\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/data-structure-algorithm/4b48b5/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"数据结构与算法 - 线性表 - 跳表"}],["meta",{"property":"og:description","content":"《数据结构与算法-王争》学习笔记，记录备查 基本概念 跳表，在有序链表基础上加了多级索引的数据结构。是一种动态的数据结构。 跳表是一种用空间来换时间的典型存储结构。除了正常链表节点外，还需要额外的空间来存储索引的数据。在实际的应用中，节点的数据对象往往都会非常大，而索引中并不会存储节点的所有数据，仅仅是存储了指针，这样当节点数据远远大于索引占用空间的时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"跳表"}],["meta",{"property":"article:tag","content":"数据结构与算法"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":1.72,"words":517},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"notes/04.数据结构与算法笔记/06.DSALG-skip-list.md","headers":[]}');export{c as comp,l as data};
