import{_ as e,c as a,a as r,o}from"./app-DdES4ywf.js";const n={};function p(i,t){return o(),a("div",null,[...t[0]||(t[0]=[r('<p>《数据结构与算法-王争》学习笔记，记录备查</p><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><p>队列，一种先进先出的线性数据结构。和栈一样，是一种<strong>操作受限的线性表数据结构</strong>。</p><p>用数组实现的队列叫做<strong>顺序队列</strong>，对链表实现的队列叫做<strong>链式队列</strong>。</p><p><strong>循环队列</strong>，首位相连的一种顺序队列。</p><p><strong>阻塞队列</strong>，在队列基础上加上了阻塞操作，当队列空时，出队阻塞，当队列满时，入队阻塞。</p><p><strong>并发队列</strong>，线程安全的队列。两种实现：</p><ul><li>简单的使用即为普通队列加了锁。</li><li>利用CAS原子操作，可以实现非常高效的并发队列。</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>队列的主要操作有：入队（enqueue）和出队（dequeue）。在队头插入元素，在队尾删除元素。</p><p>操作<strong>顺序队列</strong>时，出队相当于操作队列尾的元素，为了我们能够保持队列可用，在删除元素之后，我们需要将数据往队尾移动。这样删除元素的时间复杂度为O(n)。插入元素的时间复杂度为O(1)。</p><p>在删除时，我们可以<strong>暂时不移动元素，待队列满，无法继续入队之后，再把所有的数据往队尾移动一次</strong>。这样出队的时间复杂度为O(1)。</p><p>操作<strong>链式队列</strong>时，存储结构不是连续的，不必移动元素，所以入队和出队的时间复杂度都是O(1)。</p><p><strong>循环队列</strong>可以避免数据的迁移，但是会浪费一个存储元素的空间。循环队列需要注意判空和判满的条件：</p><ul><li>判空：head == tail</li><li>判满：(tail+1)%n == head (n为队列长度)</li></ul><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用"><span>应用</span></a></h2><ul><li>阻塞队列常用来解决一些因系统性能导致的问题。</li><li>循环并发队列常用来解决一些缓存的底层存储问题。</li></ul>',17)])])}const l=e(n,[["render",p]]),c=JSON.parse('{"path":"/data-structure-algorithm/eb9939/","title":"数据结构与算法 - 线性表 - 队列","lang":"zh-CN","frontmatter":{"title":"数据结构与算法 - 线性表 - 队列","tags":["数据结构与算法","队列"],"permalink":"/data-structure-algorithm/eb9939/","createTime":"2023/09/08 17:36:02","description":"《数据结构与算法-王争》学习笔记，记录备查 基本概念 队列，一种先进先出的线性数据结构。和栈一样，是一种操作受限的线性表数据结构。 用数组实现的队列叫做顺序队列，对链表实现的队列叫做链式队列。 循环队列，首位相连的一种顺序队列。 阻塞队列，在队列基础上加上了阻塞操作，当队列空时，出队阻塞，当队列满时，入队阻塞。 并发队列，线程安全的队列。两种实现： 简...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据结构与算法 - 线性表 - 队列\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/data-structure-algorithm/eb9939/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"数据结构与算法 - 线性表 - 队列"}],["meta",{"property":"og:description","content":"《数据结构与算法-王争》学习笔记，记录备查 基本概念 队列，一种先进先出的线性数据结构。和栈一样，是一种操作受限的线性表数据结构。 用数组实现的队列叫做顺序队列，对链表实现的队列叫做链式队列。 循环队列，首位相连的一种顺序队列。 阻塞队列，在队列基础上加上了阻塞操作，当队列空时，出队阻塞，当队列满时，入队阻塞。 并发队列，线程安全的队列。两种实现： 简..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"队列"}],["meta",{"property":"article:tag","content":"数据结构与算法"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":1.74,"words":521},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"notes/04.数据结构与算法笔记/04.DSALG-queue.md","headers":[]}');export{l as comp,c as data};
