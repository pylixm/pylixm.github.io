import{_ as e,c as p,a,o as i}from"./app-DdES4ywf.js";const r={};function n(o,t){return i(),p("div",null,[...t[0]||(t[0]=[a('<p>互联网公司，基本都有针对<a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F" title="DNS" target="_blank" rel="noopener noreferrer">DNS</a>域名解析的优化处理。有些公司甚至会构建自己的智能 DNS 解析系统，来解决 LocalDNS 存在的<a href="http://www.52im.net/thread-2121-1-1.html" title="一系列问题" target="_blank" rel="noopener noreferrer">一系列问题</a>，如域名劫持、调用精度和实时性等。</p><p>现如今，HttpDNS 已经成为一种比较常用优化方案之一。HttpDNS 是基于 http 协议具有 DNS 域名解析能力的一种服务，现在各大云厂商都已经构建了自己的 HttpDNS 服务。如<a href="https://help.aliyun.com/product/30100.html" title="阿里云HttpDNS" target="_blank" rel="noopener noreferrer">阿里云 HttpDNS</a>、<a href="https://cloud.tencent.com/product/hd" title="腾讯云HttpDNS" target="_blank" rel="noopener noreferrer">腾讯云 HttpDNS</a>等。</p><h2 id="httpdns-原理分析" tabindex="-1"><a class="header-anchor" href="#httpdns-原理分析"><span>HttpDNS 原理分析</span></a></h2><p>HttpDNS 的原理非常简单：</p><ul><li>客户端访问 HttpDNS 解析接口，HttpDNS 根据客户端 IP，从业务提前在域名配置管理系统中配置好的 IP 中根据一定的策略选择最优 IP 返回。若没有，则返回原域名，走运营商 LocalDNS 解析域名的方式；</li><li>客户端再向获取到的 IP 发送业务协议请求即可。以 Http 请求为例，通过在 header 中指定 host 字段，向该 IP 发送标准的 Http 请求即可。</li></ul><p>HttpDNS 将域名解析过程显式的体现了出来。绕过 LocalDNS 的域名递归解析过程，这样就直接避免了 LocalDNS 的一系列问题。</p><p>通过 HttpDNS 原理，可以看出 HttpDNS 需要高度的可用，很容易成为整个系统的瓶颈。除此之外，还需要一个高效的域名解析配置管理系统来做域名解析和选优策略的管理。</p><h2 id="httpdns-的一种简单实现思路" tabindex="-1"><a class="header-anchor" href="#httpdns-的一种简单实现思路"><span>HttpDNS 的一种简单实现思路</span></a></h2><p>下面我们来探讨另一种简单的实现方式，利用自己可控的 DNS 系统和 dig 命令来实现简单 HttpsDNS 服务。</p><p>思路如下：</p><ul><li>1、将域名和 ip 的配置在公司自建 DNS 或第三方的 DNS 系统配置好，可实现地区或运营商的动态调用。</li><li>2、开发 http api 服务，用来提供域名查询服务接口。</li><li>3、在 http api 服务接口业务逻辑中，拿到客户端的 IP，通过如下命令查询域名的解析 IP，返回该 IP 即可。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>dig @ns服务器 www.baidu.com +subnet=客户端ip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该方式利用了 DNS 系统的动态调度功能和域名 IP 的管理功能，结合 Http api 服务提供 Http 协议的 DNS 解析能力。绕过了 LocalDNS 的递归查询，解决了 DNS 劫持问题和精度问题。</p><p>该方式，只是一个简单的思路探索，其中还有很多细节的问题需要深究。DNS 解析是业务系统的一个强依赖服务，可用性和稳定性不容忽视。</p><p>好了，今天的分享就到这里，欢迎留言探讨！</p><p>我是 DeanWu，一个努力成为真正 SRE 的人。</p><blockquote><p>关注公众号「码农吴先生」, 可第一时间获取最新文章。回复关键字「go」「python」获取我收集的学习资料，也可回复关键字「小二」，加我 wx 拉你进技术交流群，聊技术聊人生~</p></blockquote><p><img src="https://gitee.com/pylixm/picture/raw/master/2020-12-14/deanwu_wechat.png" alt=""></p>',18)])])}const l=e(r,[["render",n]]),c=JSON.parse('{"path":"/pages/eceeeb/","title":"实现简单的httpDNS的一种思路","lang":"zh-CN","frontmatter":{"title":"实现简单的httpDNS的一种思路","tags":["Dns","dig"],"permalink":"/pages/eceeeb/","createTime":"2023/09/08 17:36:02","description":"互联网公司，基本都有针对DNS域名解析的优化处理。有些公司甚至会构建自己的智能 DNS 解析系统，来解决 LocalDNS 存在的一系列问题，如域名劫持、调用精度和实时性等。 现如今，HttpDNS 已经成为一种比较常用优化方案之一。HttpDNS 是基于 http 协议具有 DNS 域名解析能力的一种服务，现在各大云厂商都已经构建了自己的 HttpD...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"实现简单的httpDNS的一种思路\\",\\"image\\":[\\"https://gitee.com/pylixm/picture/raw/master/2020-12-14/deanwu_wechat.png\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/pages/eceeeb/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"实现简单的httpDNS的一种思路"}],["meta",{"property":"og:description","content":"互联网公司，基本都有针对DNS域名解析的优化处理。有些公司甚至会构建自己的智能 DNS 解析系统，来解决 LocalDNS 存在的一系列问题，如域名劫持、调用精度和实时性等。 现如今，HttpDNS 已经成为一种比较常用优化方案之一。HttpDNS 是基于 http 协议具有 DNS 域名解析能力的一种服务，现在各大云厂商都已经构建了自己的 HttpD..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gitee.com/pylixm/picture/raw/master/2020-12-14/deanwu_wechat.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"dig"}],["meta",{"property":"article:tag","content":"Dns"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":2.73,"words":820},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"05.运维/03.其他/11.Ack-dns-dig.md","headers":[],"categoryList":[{"id":"8091bd","sort":5,"name":"运维"},{"id":"b3e39d","sort":3,"name":"其他"}]}');export{l as comp,c as data};
