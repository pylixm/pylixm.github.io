import{_ as t,c as a,a as s,o as n}from"./app-DdES4ywf.js";const o={};function i(r,e){return n(),a("div",null,[...e[0]||(e[0]=[s(`<h3 id="_0x00-默认权限-permissions-的配置说明" tabindex="-1"><a class="header-anchor" href="#_0x00-默认权限-permissions-的配置说明"><span>0X00 默认权限 permissions 的配置说明：</span></a></h3><ul><li><p><code>AllowAny</code></p><p>允许任何人调用</p><p>Allow any access.</p></li><li><p><code>IsAuthenticated</code></p><p>只允许认证用户调用（在django auth表中注册的用户）</p><p>Allows access only to authenticated users.</p></li><li><p><code>IsAdminUser</code></p><p>只允许管理员（即可以登录admin后端的用户，<code>user.is_staff</code> is <code>True</code> 的用户）</p><p>Allows access only to admin users.</p><p>The IsAdminUser permission class will deny permission to any user, unless <code>user.is_staff</code> is <code>True</code> in which case permission will be allowed.</p></li><li><p><code>IsAuthenticatedOrReadOnly</code></p><p>允许任何只读调用，和认证的用户调用</p><p>The request is authenticated as a user, or is a read-only request.</p></li><li><p><code>DjangoModelPermissions</code></p><p>请求认证同django的用户 相关请求 model的权限</p><p>The request is authenticated using <code>django.contrib.auth</code> permissions. See: https://docs.djangoproject.com/en/dev/topics/auth/#permissions</p><p>It ensures that the user is authenticated, and has the appropriate <code>add</code>/<code>change</code>/<code>delete</code> permissions on the model.</p><p>This permission can only be applied against view classes that provide a <code>.model</code> or <code>.queryset</code> attribute.</p></li><li><p><code>DjangoModelPermissionsOrAnonReadOnly</code></p><p>同DjangoModelPermissions</p><p>Similar to DjangoModelPermissions, except that anonymous users are allowed read-only access.</p></li><li><p><code>DjangoObjectPermissions</code></p><p>比较少用，需要增加django三方权限库django-guardian.</p><p>The request is authenticated using Django&#39;s object-level permissions. It requires an object-permissions-enabled backend, such as Django Guardian.</p><p>It ensures that the user is authenticated, and has the appropriate <code>add</code>/<code>change</code>/<code>delete</code> permissions on the object using .has_perms.</p><p>This permission can only be applied against view classes that provide a <code>.model</code> or <code>.queryset</code> attribute.</p></li></ul><h3 id="_0x01-默认认证说明" tabindex="-1"><a class="header-anchor" href="#_0x01-默认认证说明"><span>0X01 默认认证说明：</span></a></h3><ul><li><p><code>BasicAuthentication</code></p><p>This authentication scheme uses HTTP Basic Authentication, signed against a user&#39;s username and password. Basic authentication is generally only appropriate for testing.</p><p>基本的 http 验证，仅验证用户名和密码，仅用于测试使用。</p></li><li><p><code>SessionAuthentication</code></p><p>This authentication scheme uses Django&#39;s default session backend for authentication. Session authentication is appropriate for AJAX clients that are running in the same session context as your website.</p><p>此种认证发难使用 django的默认sesstion方式 。适用于那些在同一个session交互的 ajax 的客户端或网站。</p></li><li><p><code>TokenAuthentication</code></p><p>This authentication scheme uses a simple token-based HTTP Authentication scheme. Token authentication is appropriate for client-server setups, such as native desktop and mobile clients.</p><p>此验证方案使用一个简单的基于令牌的HTTP认证。令牌认证适用于客户端 - 服务器设置，如本机桌面和移动客户端。</p></li></ul><h3 id="_0x02-自定义认证和权限" tabindex="-1"><a class="header-anchor" href="#_0x02-自定义认证和权限"><span>0X02 自定义认证和权限</span></a></h3><h4 id="认证" tabindex="-1"><a class="header-anchor" href="#认证"><span>认证</span></a></h4><p>继承 <code>BaseAuthentication</code> 类并重写 <code>.authenticate(self, request)</code> 方法。</p><p><a href="http://www.django-rest-framework.org/api-guide/authentication/#example" target="_blank" rel="noopener noreferrer">官方例子</a></p><h4 id="权限" tabindex="-1"><a class="header-anchor" href="#权限"><span>权限</span></a></h4><p>继承 <code>BasePermission</code> 类重写 <code>.has_permission(self, request, view)</code> 或 <code>.has_object_permission(self, request, view, obj)</code> 方法。</p><p><a href="http://www.django-rest-framework.org/api-guide/permissions/#examples" target="_blank" rel="noopener noreferrer">官方例子</a></p><h3 id="_0x03-使用方法" tabindex="-1"><a class="header-anchor" href="#_0x03-使用方法"><span>0X03 使用方法</span></a></h3><p>方法一 ：</p><p>将配置信息放在django的setting文件中：</p><pre><code>REST_FRAMEWORK = {
    &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: (
        &#39;rest_framework.authentication.BasicAuthentication&#39;,
        &#39;rest_framework.authentication.SessionAuthentication&#39;,
    )
}
</code></pre><p>方法二：</p><p>直接放在接口 views中</p><pre><code># class 视图
class ExampleView(APIView):
    authentication_classes = (SessionAuthentication, BasicAuthentication)
    permission_classes = (IsAuthenticated,)

    def get(self, request, format=None):
        content = {
            &#39;user&#39;: unicode(request.user),  # \`django.contrib.auth.User\` instance.
            &#39;auth&#39;: unicode(request.auth),  # None
        }
        return Response(content)

# func 视图
@api_view([&#39;GET&#39;])
@authentication_classes((SessionAuthentication, BasicAuthentication))
@permission_classes((IsAuthenticated,))
def example_view(request, format=None):
    content = {
        &#39;user&#39;: unicode(request.user),  # \`django.contrib.auth.User\` instance.
        &#39;auth&#39;: unicode(request.auth),  # None
    }
    return Response(content)
</code></pre><hr><h4 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考：</span></a></h4><ul><li><a href="http://www.django-rest-framework.org/api-guide/authentication/" target="_blank" rel="noopener noreferrer">http://www.django-rest-framework.org/api-guide/authentication/</a></li></ul>`,21)])])}const p=t(o,[["render",i]]),d=JSON.parse('{"path":"/pages/2d464a/","title":"Django restful framework 学习使用总结-权限相关 - Restful","lang":"zh-CN","frontmatter":{"title":"Django restful framework 学习使用总结-权限相关 - Restful","tags":["Django","Restful"],"permalink":"/pages/2d464a/","createTime":"2023/09/08 17:36:02","description":"0X00 默认权限 permissions 的配置说明： AllowAny 允许任何人调用 Allow any access. IsAuthenticated 只允许认证用户调用（在django auth表中注册的用户） Allows access only to authenticated users. IsAdminUser 只允许管理员（即可以登...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Django restful framework 学习使用总结-权限相关 - Restful\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/pages/2d464a/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"Django restful framework 学习使用总结-权限相关 - Restful"}],["meta",{"property":"og:description","content":"0X00 默认权限 permissions 的配置说明： AllowAny 允许任何人调用 Allow any access. IsAuthenticated 只允许认证用户调用（在django auth表中注册的用户） Allows access only to authenticated users. IsAdminUser 只允许管理员（即可以登..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"Restful"}],["meta",{"property":"article:tag","content":"Django"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":2.24,"words":671},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"01.开发语言/01.Python/04.Djangorestfulframework/02.Django-restfull-framework-review.md","headers":[],"categoryList":[{"id":"59843f","sort":1,"name":"开发语言"},{"id":"9d2a49","sort":1,"name":"Python"},{"id":"873140","sort":4,"name":"Djangorestfulframework"}]}');export{p as comp,d as data};
