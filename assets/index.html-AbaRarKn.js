import{_ as s,c as a,a as i,o as n}from"./app-DdES4ywf.js";const p={};function t(l,e){return n(),a("div",null,[...e[0]||(e[0]=[i(`<p>上一篇<a href="https://pylixm.cc/posts/2019-07-23-Puppet-tutorial.html" target="_blank" rel="noopener noreferrer">「译」Puppet 简单入门 - 理论篇</a>文章我们分享了 Puppet的基本工作原理和基本概念，这篇文章我们来看下如何具体的安装。</p><p>Puppet有两种部署模式，如下：</p><ul><li><p>Master/Agent 模式，官方推荐的模式，该模式下Master和Agent部署在不同的机器，通过HTTPS通信。Master节点部署puppet server服务用来签发管理证书和控制agent的配置信息，agent通过请求mater的catalog来变更自身服务状态。</p></li><li><p>无Master模式, 该模式下只有Agent节点，无需通讯。通过执行 <code>puppet apply</code> 自己根据本地的配置信息生成catalog来变更服务状态。官方已不推荐该模式，应为配置文件分散在agent机器上，管理和安全无法保障。</p></li></ul><p>注：puppet server 的安装只支持Linux系统，agent 支持Linux/Windows/Mac。</p><p>这里咱们来体验下第一种方式，部署的环境如下：</p><ul><li>2台 centos7.3</li><li>puppet6</li></ul><h3 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作"><span>准备工作</span></a></h3><p><strong>确保服务器之间的时间相同</strong></p><p>因为puppet agent 与master 通讯使用https ，若时间不一致，可能会导致证书过期问题。</p><p>可通过安装 NTP 服务来保持各服务器时间的一致性。如下操作：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>yum -y install ntpdate</span></span>
<span class="line"><span>ntpdate 0.centos.pool.ntp.org</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>DNS解析</strong></p><p>因为puppet各节点之间的同学是通过hostname，需要我们配置合理的DNS服务，确保各节点之间可以通过hostname 可以通信。我们测试期间，可以简单的配置<code>hosts</code>文件来解析。</p><h3 id="puppet-server-安装" tabindex="-1"><a class="header-anchor" href="#puppet-server-安装"><span>puppet server 安装</span></a></h3><ol><li>安装yum源，具体地址可根据自己的系统和要安装的puppet版本来选择，可参考<a href="https://puppet.com/docs/puppetserver/6.5/install_from_packages.html" target="_blank" rel="noopener noreferrer">这里</a></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>sudo rpm -Uvh https://yum.puppet.com/puppet6-release-el-7.noarch.rpm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>安装puppet server 组件</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>yum install -y puppetserver</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果你有对Puppet管理的机器的信息和catalog的查阅需求，你可以安装<code>PuppetDB</code>。步骤可参考<a href="https://puppet.com/docs/puppetdb/latest/install_via_module.html" target="_blank" rel="noopener noreferrer">这里</a>，本文暂不展开。</p><h3 id="puppet-server-配置" tabindex="-1"><a class="header-anchor" href="#puppet-server-配置"><span>puppet server 配置</span></a></h3><p><strong>内存优化</strong></p><p>puppetserver 默认内存分配为2G, 可通过修改初始化文件中如下参数来修改：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span># /etc/sysconfig/puppetserver</span></span>
<span class="line"><span></span></span>
<span class="line"><span>......</span></span>
<span class="line"><span># Modify this if you&#39;d like to change the memory allocation, enable JMX, etc</span></span>
<span class="line"><span>JAVA_ARGS=&quot;-Xms2g -Xmx2g&quot;</span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>内嵌webserver配置</strong></p><p>puppet server 内嵌了一个机遇JVM的服务，用来颁发证书。配置在 <code>/etc/puppetlabs/puppetserver/conf.d/webserver.conf</code>，默认情况下我们无需改动，若你使用外部的ca服务器，那可以修改它。可参考<a href="https://puppet.com/docs/puppetserver/6.5/config_file_webserver.html" target="_blank" rel="noopener noreferrer">这里</a>。</p><p><strong>修改puppetserver配置</strong></p><p>默认情况下，puppet server直接启动即可运行，直接采用默认配置接口。他默认的server通信地址为 <code>puppet</code>, 因此只需在agent 上添加 <code>server = puppet</code> 即可。</p><p>我们也可以自定义一些配置，可通过修改 <code>/etc/puppetlabs/puppet/puppet.conf</code> 配置文件实现，如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>[master]</span></span>
<span class="line"><span>dns_alt_names = 55-01.local</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[main]</span></span>
<span class="line"><span>certname = 55-01.local</span></span>
<span class="line"><span>server = 55-01.local</span></span>
<span class="line"><span>environment = production</span></span>
<span class="line"><span>runinterval = 1h</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="puppet-server-启动" tabindex="-1"><a class="header-anchor" href="#puppet-server-启动"><span>puppet server 启动</span></a></h3><p><strong>为保证puppet server和agent的同学，我们需要生成证书</strong></p><p>生成puppetserver证书：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>puppetserver ca setup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>生成agent证书：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>puppetserver ca sign &lt;NAME&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># or</span></span>
<span class="line"><span>sudo puppetserver ca sign (&lt;HOSTNAME&gt; or --all) --allow-dns-alt-names</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多证书命令，可参考<a href="https://puppet.com/docs/puppet/6.10/puppet_server_ca_cli.html" target="_blank" rel="noopener noreferrer">这里</a></p><p><strong>启动服务</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>systemctl start puppetserver</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们可以通过 ps 来查看puppetserver 进程，确保已启动。</p><p>注：puppet server 监听8140端口（可在webserver.conf中配置），确保机器的防火墙打开。</p><h3 id="puppet-agent-安装" tabindex="-1"><a class="header-anchor" href="#puppet-agent-安装"><span>puppet agent 安装</span></a></h3><ol><li>同样现安装yum源。</li><li>yum安装 agent；</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span> yum install puppet-agent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="puppet-agent-配置" tabindex="-1"><a class="header-anchor" href="#puppet-agent-配置"><span>puppet agent 配置</span></a></h3><p><strong>agent 配置</strong></p><p>agent的配置文件和master相同，都是<code>/etc/puppetlabs/puppet/puppet.conf</code>，可配置如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>[main]</span></span>
<span class="line"><span>certname = 55-02.local</span></span>
<span class="line"><span>server = 55-01.local</span></span>
<span class="line"><span>environment = production</span></span>
<span class="line"><span>runinterval = 1h</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此处需要与server通信，确保<code>55-01.local</code>可以解析。</p><h3 id="puppet-agnet-启动" tabindex="-1"><a class="header-anchor" href="#puppet-agnet-启动"><span>puppet agnet 启动</span></a></h3><p>通过如下命令启动并使agent自动运行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>/opt/puppetlabs/bin/puppet resource service puppet ensure=running enable=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="证书签署" tabindex="-1"><a class="header-anchor" href="#证书签署"><span>证书签署</span></a></h3><p>在agent 第一次连接到server 时，会请求证书。我们可以在server上，运行如下命令查看：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>puppetserver ca list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>agent和server之间通信必须获取到server签署的证书。可通过如下命令签署：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>puppetserver ca sign --certname 55-02.local</span></span>
<span class="line"><span># or </span></span>
<span class="line"><span>puppetserver ca sign --all   # 所有请求都签署</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可通过如下命令撤销签署：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>puppetserver ca revoke --certname &lt;AGENT_NAME&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过如下命令查看当前签署和为签署情况：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>puppetserver ca list --all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>证书签署后，我们可以在agent运行<code>puppet agent -t </code>来测试agent的连通性。我们看到如下信息，说明server和agent配置正确，可以正常通信。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Info: Using configured environment &#39;production&#39;</span></span>
<span class="line"><span>Info: Retrieving pluginfacts</span></span>
<span class="line"><span>Info: Retrieving plugin</span></span>
<span class="line"><span>Info: Retrieving locales</span></span>
<span class="line"><span>Info: Caching catalog for 55-2.local</span></span>
<span class="line"><span>Info: Applying configuration version &#39;1558878523&#39;</span></span>
<span class="line"><span>Notice: Applied catalog in 0.03 seconds</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写我们的配置文件-测试puppet" tabindex="-1"><a class="header-anchor" href="#编写我们的配置文件-测试puppet"><span>编写我们的配置文件，测试puppet</span></a></h3><p>上篇文章介绍到，puppet是通过配置文件也就是有资源和类组成的<code>manifest</code> 配置文件来控制agent的配置资源和包的。那么让我们来编写一个manifest，来测试下puppet 的基本功能。</p><p>puppet 的主配置文件在 <code>vi /etc/puppetlabs/code/environments/production/manifests/</code>。</p><p>在该目录中创建文件 <code>site.pp</code>，添加内容如下：</p><div class="language-pp line-numbers-mode" data-highlighter="shiki" data-ext="pp" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-pp"><span class="line"><span>node &#39;client.itzgeek.local&#39; { # Applies only to mentioned node; if nothing mentioned, applies to all.</span></span>
<span class="line"><span>file { &#39;/tmp/puppetesttdir&#39;: # Resource type file</span></span>
<span class="line"><span> ensure =&gt; &#39;directory&#39;, # Create as a diectory</span></span>
<span class="line"><span> owner =&gt; &#39;root&#39;, # Ownership</span></span>
<span class="line"><span> group =&gt; &#39;root&#39;, # Group Name</span></span>
<span class="line"><span> mode =&gt; &#39;0755&#39;, # Directory permissions</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在agent 上运行 <code>puppet agent -t</code>, 输出如下内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Info: Using configured environment &#39;production&#39;</span></span>
<span class="line"><span>Info: Retrieving pluginfacts</span></span>
<span class="line"><span>Info: Retrieving plugin</span></span>
<span class="line"><span>Info: Retrieving locales</span></span>
<span class="line"><span>Info: Loading facts</span></span>
<span class="line"><span>Info: Caching catalog for 31-1-158-shx-core.jpool.sinaimg.cn</span></span>
<span class="line"><span>Info: Applying configuration version &#39;1574997520&#39;</span></span>
<span class="line"><span>Notice: /Stage[main]/Main/Node[31-1-158-shx-core.jpool.sinaimg.cn]/File[/tmp/puppetesttdir]/ensure: created</span></span>
<span class="line"><span>Notice: Applied catalog in 0.05 seconds</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到 tmp 目录下创建了一个 <code>puppettestdir</code>目录，如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span># /tmp </span></span>
<span class="line"><span>drwxr-xr-x   2 root root    4096 Nov 29 11:18 puppetesttdir</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，我们的puppet Master/Agent 架构变安装好了，我们也进行了文件下发的体验。</p><h3 id="重要的topic-文档" tabindex="-1"><a class="header-anchor" href="#重要的topic-文档"><span>重要的Topic 文档</span></a></h3><p>其他重要的Topic，大家可参考对应文档。</p><ul><li><a href="https://puppet.com/docs/puppet/6.10/dirs_important_directories.html" target="_blank" rel="noopener noreferrer">重要的目录和文件说明</a></li><li><a href="https://puppet.com/docs/puppet/6.10/env_environments.html" target="_blank" rel="noopener noreferrer">puppet environments相关</a></li><li><a href="https://puppet.com/docs/puppet/6.10/modules.html" target="_blank" rel="noopener noreferrer">puppet modules使用</a></li><li><a href="https://puppet.com/docs/puppet/6.10/puppet_language.html" target="_blank" rel="noopener noreferrer">puppet 配置文件语法</a></li><li><a href="https://puppet.com/docs/puppet/6.10/nodes_external.html" target="_blank" rel="noopener noreferrer">puppet server http api</a></li><li><a href="https://puppet.com/docs/puppet/6.10/facter.html" target="_blank" rel="noopener noreferrer">puppet facter</a></li><li><a href="https://forge.puppet.com/" target="_blank" rel="noopener noreferrer">puppet 模块仓库</a></li></ul>`,75)])])}const d=s(p,[["render",t]]),c=JSON.parse('{"path":"/pages/7ceb00/","title":"Puppet 简单入门 - 安装篇","lang":"zh-CN","frontmatter":{"title":"Puppet 简单入门 - 安装篇","tags":["Puppet","运维知识库"],"permalink":"/pages/7ceb00/","createTime":"2023/09/08 17:36:02","description":"上一篇「译」Puppet 简单入门 - 理论篇文章我们分享了 Puppet的基本工作原理和基本概念，这篇文章我们来看下如何具体的安装。 Puppet有两种部署模式，如下： Master/Agent 模式，官方推荐的模式，该模式下Master和Agent部署在不同的机器，通过HTTPS通信。Master节点部署puppet server服务用来签发管理证...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Puppet 简单入门 - 安装篇\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/pages/7ceb00/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"Puppet 简单入门 - 安装篇"}],["meta",{"property":"og:description","content":"上一篇「译」Puppet 简单入门 - 理论篇文章我们分享了 Puppet的基本工作原理和基本概念，这篇文章我们来看下如何具体的安装。 Puppet有两种部署模式，如下： Master/Agent 模式，官方推荐的模式，该模式下Master和Agent部署在不同的机器，通过HTTPS通信。Master节点部署puppet server服务用来签发管理证..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"运维知识库"}],["meta",{"property":"article:tag","content":"Puppet"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":4.9,"words":1470},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"05.运维/30.puppet/02.Puppet-start.md","headers":[],"categoryList":[{"id":"8091bd","sort":5,"name":"运维"},{"id":"ae84fd","sort":30,"name":"puppet"}]}');export{d as comp,c as data};
