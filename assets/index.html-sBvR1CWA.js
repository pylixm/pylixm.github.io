import{_ as i,c as a,a as e,o as n}from"./app-DdES4ywf.js";const l="/imgs/https/mozilla.png",t="/imgs/https/ssl-server-test.png",p={};function h(r,s){return n(),a("div",null,[...s[0]||(s[0]=[e(`<p>这篇文章，向大家分享如何使用<code>Let&#39;s Encrypt</code>的免费证书来实现Nginx网站的HTTPS化。</p><p>在开始之前，先让我们来了解下，什么是HTTPS？为什么要配置HTTPS?</p><h2 id="https-简介" tabindex="-1"><a class="header-anchor" href="#https-简介"><span>HTTPS 简介</span></a></h2><p>HTTPS 超文本传输安全协议（英语：HyperText Transfer Protocol Secure，缩写：HTTPS；常称为HTTP over TLS、HTTP over SSL或HTTP Secure）是一种通过计算机网络进行安全通信的传输协议。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。HTTPS协议在1994年首次被<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E6%99%AF" target="_blank" rel="noopener noreferrer">网景</a>公司（Netscape）提出，随后扩展到互联网上。起初因为部署它需要购买<a href="https://zh.wikipedia.org/wiki/%E8%AF%81%E4%B9%A6%E9%A2%81%E5%8F%91%E6%9C%BA%E6%9E%84" target="_blank" rel="noopener noreferrer">证书颁发机构</a>（CA）颁发的证书，以及各家浏览器的支持不尽如人意，推广的并不是很好。只被使用在支付等安全性要求比较高的业务场景中。</p><p>2000年以来，随着人们对信息安全的重视，HTTPS逐渐的被广泛使用。近年来，HTTPS已逐渐成为各大网站访问的默认标准协议。它与HTTP相比，主要优势在安全方面，它将HTTP协议传输的明文信息使用SSL/TLS协议<sup>[0]</sup>进行了加密处理。传输起来，更安全可靠，可避免中间信息被篡改，如无良的运营商劫持，乱加广告。</p><p>关于<code>HTTPS</code>本文不再做过多介绍，如果想了解更多，可阅读阮老师的<a href="http://www.ruanyifeng.com/blog/2016/08/migrate-from-http-to-https.html" target="_blank" rel="noopener noreferrer">HTTPS升级指南系列文章</a><sup>[1]</sup></p><p>从上边的描述中，我们知道在部署HTTPS时，需要证书颁发机构签发的证书。随着HTTPS的普及，如今有了许多免费的证书的颁发机构，如 StartSSL、TRUSTAsia、Let&#39;s Encrypt以及国内的各云平台等。这些免费的HTTPS证书，对于我们个人站来说足够用，如果需要更复杂的功能或高级别的证书支持，可选择更加专业的商业版证书。</p><p>下面我们来说下，开始使用<code>Let&#39;s Encrypt</code>提供的免费证书实现Nginx站点的HTTPS化。</p><h2 id="https-部署" tabindex="-1"><a class="header-anchor" href="#https-部署"><span>HTTPS 部署</span></a></h2><p>下面我们使用如下环境做部署：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>CentOS Linux release 7.4.1708 (Core)</span></span>
<span class="line"><span>nginx version: nginx/1.15.8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装需要的工具" tabindex="-1"><a class="header-anchor" href="#安装需要的工具"><span>安装需要的工具</span></a></h3><p><code>Let&#39;s Encrypt </code>给我们提供了一个自动化生成证书的工具<code>certbot</code><sup>[2]</sup>。我们可以直接通过 yum 安装：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>yum install -y certbot </span></span>
<span class="line"><span>yum install -y python2-certbot-nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>python2-certbot-nginx</code> 为certbot提供的自动操作nginx配置文件的工具。</li></ul><h3 id="生成证书" tabindex="-1"><a class="header-anchor" href="#生成证书"><span>生成证书</span></a></h3><h4 id="安装版nginx" tabindex="-1"><a class="header-anchor" href="#安装版nginx"><span>安装版nginx</span></a></h4><p>若你的nginx是通过yum或rpm包的方式安装，那么可以通过下面两种方式的命令来自动生成证书。</p><p>第一种，生成证书并自动修改nginx配置；</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>certbot --nginx</span></span>
<span class="line"><span>certbot --nginx rollback # 回滚配置</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种，只生成证书，不修改nginx配置；</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>certbot certonly --nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在执行命令时，可能会遇到如下错误：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>ImportError: No module named &#39;requests.packages.urllib3&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>是因为Python模块版本不兼容问题导致，将如下包卸载重新安装即可：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>pip uninstall requests</span></span>
<span class="line"><span>pip uninstall urllib3</span></span>
<span class="line"><span>yum remove python-urllib3</span></span>
<span class="line"><span>yum remove python-requests</span></span>
<span class="line"><span>yum install python-urllib3</span></span>
<span class="line"><span>yum install python-requests</span></span>
<span class="line"><span>yum install certbot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据提示，根据你的实际需要逐步选择即可。其中填写邮箱时，尽量填写自己的常用邮箱，let机构会想你邮箱发送证书过期提醒等事宜。</p><h4 id="源码版nginx" tabindex="-1"><a class="header-anchor" href="#源码版nginx"><span>源码版nginx</span></a></h4><p>若你使用的是无需安装的源码版，则可使用如下命令获取证书：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>mkdir -p /var/www/example</span></span>
<span class="line"><span>certbot certonly --webroot -w /var/www/example -d example.com -d www.example.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>--webroot</code> 模式会在 /var/www/example 中创建 .well-known 文件夹，这个文件夹里面包含了一些验证文件，certbot 会通过访问 <code>example.com/.well-known/acme-challenge</code> 来验证你的域名是否绑定的这个服务器。以确定你对该域名的拥有权。</p><p><code>--nginx</code> 模式时，该验证会自动通过nginx的服务来实现。</p><p>这种验证方式，Let机构叫做<a href="https://link.jianshu.com/?t=https://ietf-wg-acme.github.io/acme/" target="_blank" rel="noopener noreferrer">ACME协议</a><sup>[3]</sup>。只要遵循该协议，就可以获取Let结构签发的证书。除了官方的certbot工具外，也有很多遵循 ACME协议的第三方自动化工具，如<a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener noreferrer">acme.sh</a>。</p><h3 id="修改配置" tabindex="-1"><a class="header-anchor" href="#修改配置"><span>修改配置</span></a></h3><p>如果使用自动修改配置的话，certbot 已为我们添加好证书等相关信息。大致配置如下：</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-nginx"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># configuration of the server</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">server</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # the port your site will be served on</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # the domain name it will serve for</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    server_name </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">example.com </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # substitute your machine&#39;s IP address or FQDN</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    charset </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    utf-8</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # max upload size</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    client_max_body_size </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">75M</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   # adjust to taste</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # Django media</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    location</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> /media  </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        alias </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/opt/example/uploads</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # your Django project&#39;s media files - amend as required</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    location</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> /static </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        alias </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/opt/example/collect_static</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # your Django project&#39;s static files - amend as required</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # Finally, send all non-media requests to the Django server.</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    location</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> / </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        proxy_pass </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> http://127.0.0.1:8080</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        proxy_set_header </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Host </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">host</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        proxy_set_header </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">X-Real-IP </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">remote_addr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        proxy_set_header </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">X-Forwarded-For </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">proxy_add_x_forwarded_for</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    listen </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">443</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ssl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    ssl_certificate </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/etc/letsencrypt/live/www.example.com/fullchain.pem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    ssl_certificate_key </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/etc/letsencrypt/live/www.example.com/privkey.pem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    include </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/etc/letsencrypt/options-ssl-nginx.conf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    ssl_dhparam </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/etc/letsencrypt/ssl-dhparams.pem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">server</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">host</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> = </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">example.com) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 301</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> https://</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">host</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">request_uri</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    } </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># managed by Certbot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    listen </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">     80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    server_name </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">example.com </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 404</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">; </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">server</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    server_name </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> www.example.com</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    rewrite</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;"> ^/(.*)$</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> https://example.com/</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">1</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> permanent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    listen </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">443</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ssl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    ssl_certificate </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/etc/letsencrypt/live/www.example.com/fullchain.pem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    ssl_certificate_key </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/etc/letsencrypt/live/www.example.com/privkey.pem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    include </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/etc/letsencrypt/options-ssl-nginx.conf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    ssl_dhparam </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/etc/letsencrypt/ssl-dhparams.pem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # managed by Certbot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">server</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">host</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> = </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">www.example.com) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 301</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> https://</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">host</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">request_uri</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    } </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># managed by Certbot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    listen </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">      80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    server_name </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> www.example.com</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 404</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">; </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># managed by Certbot</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后边带有 <code>managed by Certbot</code> 注释的为 certbot 添加。</p><p>若我们自己添加的话，可参考Mozilla给出的<a href="https://ssl-config.mozilla.org/" target="_blank" rel="noopener noreferrer">SSL配置最佳实践</a></p><p><img src="`+l+'" alt=""></p><h3 id="证书续签" tabindex="-1"><a class="header-anchor" href="#证书续签"><span>证书续签</span></a></h3><p>Let机构颁发的证书有效期只有3个月，我们需要在它到期之前续签。certbot工具提供了一个简单的命令来实现续签，如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>certbot renew</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们可以配置系统定制任务或其他定时任务来执行这条续签命令。</p><p>至此，我们基于Let&#39;s Encrypt和nginx 的HTTPS便部署完成了。我们可以使用[Qualys SSL Labs]来全面的测试下我们的网站，如下：</p><p><img src="'+t+'" alt=""></p><h2 id="扩展阅读" tabindex="-1"><a class="header-anchor" href="#扩展阅读"><span>扩展阅读</span></a></h2><ul><li><a href="https://diamondfsd.com/lets-encrytp-hand-https/" target="_blank" rel="noopener noreferrer">Let&#39;s Encrypt 使用教程，免费的SSL证书，让你的网站拥抱 HTTPS</a></li><li><a href="https://ksmx.me/letsencrypt-ssl-https/" target="_blank" rel="noopener noreferrer">LET&#39;S ENCRYPT 给网站加 HTTPS 完全指南</a></li></ul><h2 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span>附录</span></a></h2><ul><li>0.<a href="https://www.ruanyifeng.com/blog/2014/02/ssl_tls.html" target="_blank" rel="noopener noreferrer">SSL/TLS协议运行机制的概述</a></li><li>1.<a href="http://www.ruanyifeng.com/blog/2016/08/migrate-from-http-to-https.html" target="_blank" rel="noopener noreferrer">HTTPS升级指南系列文章-阮一峰</a></li><li>2.<a href="https://certbot.eff.org/docs/using.html#getting-certificates-and-choosing-plugins" target="_blank" rel="noopener noreferrer">certbot 的使用文档</a></li><li>3.<a href="https://ietf-wg-acme.github.io/acme/" target="_blank" rel="noopener noreferrer">ACME协议</a><ul><li>Automatic Certificate Management Environment=ACME，自动认证管理环境协议</li><li>协议草案已经提交IETF</li><li>ACME协议的基本思路是： <ul><li>在你服务器上生成一次性的随机特征数据(nonce)</li><li>然后通过Let’s Encrypt的服务器核对这个数据</li><li>核对成功发放证书</li><li>有两种方式，HTTP和DNS，一般使用的是前者</li></ul></li></ul></li></ul>',49)])])}const k=i(p,[["render",h]]),c=JSON.parse(`{"path":"/pages/223aed/","title":"使用Let's Encrypt免费证书实现Nginx站点的HTTPS化","lang":"zh-CN","frontmatter":{"title":"使用Let's Encrypt免费证书实现Nginx站点的HTTPS化","tags":["letencrypt","HTTPS"],"permalink":"/pages/223aed/","createTime":"2023/09/08 17:36:02","description":"这篇文章，向大家分享如何使用Let's Encrypt的免费证书来实现Nginx网站的HTTPS化。 在开始之前，先让我们来了解下，什么是HTTPS？为什么要配置HTTPS? HTTPS 简介 HTTPS 超文本传输安全协议（英语：HyperText Transfer Protocol Secure，缩写：HTTPS；常称为HTTP over TLS、...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用Let's Encrypt免费证书实现Nginx站点的HTTPS化\\",\\"image\\":[\\"https://pylixm.top/imgs/https/mozilla.png\\",\\"https://pylixm.top/imgs/https/ssl-server-test.png\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/pages/223aed/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"使用Let's Encrypt免费证书实现Nginx站点的HTTPS化"}],["meta",{"property":"og:description","content":"这篇文章，向大家分享如何使用Let's Encrypt的免费证书来实现Nginx网站的HTTPS化。 在开始之前，先让我们来了解下，什么是HTTPS？为什么要配置HTTPS? HTTPS 简介 HTTPS 超文本传输安全协议（英语：HyperText Transfer Protocol Secure，缩写：HTTPS；常称为HTTP over TLS、..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pylixm.top/imgs/https/mozilla.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"HTTPS"}],["meta",{"property":"article:tag","content":"letencrypt"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":5.77,"words":1731},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"05.运维/03.其他/12.Letencrypt.md","headers":[],"categoryList":[{"id":"8091bd","sort":5,"name":"运维"},{"id":"b3e39d","sort":3,"name":"其他"}]}`);export{k as comp,c as data};
