import{_ as i,c as a,a as n,o as l}from"./app-DdES4ywf.js";const h={};function t(k,s){return l(),a("div",null,[...s[0]||(s[0]=[n(`<p>最近有这么一个场景，系统的定时任务执行时间长周期短，可能本周期执行时，上个周期的任务还没有执行完，这样便会造成相同的任务同一时间有过个任务进程在执行。如果任务有对互斥资源操作时，有可能产生死锁。</p><p>解决此问题这里有几种方法：</p><ul><li>1、新增一个任务进程来控制任务的执行，每次启动新任务时，检测下是否有任务在执行。</li><li>2、使用Linux 系统自带的文件锁命令：flock</li></ul><p>第一种，比较简单，本文不再赘述。咱们来看下第二种方式，flock 命名。</p><h2 id="flock-命令" tabindex="-1"><a class="header-anchor" href="#flock-命令"><span>flock 命令</span></a></h2><p>flock 命令，是Linux 的文件锁命令。可以通过一个锁文件，来控制在shell 中逻辑的互斥性。用法如下；</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Usage:</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> flock</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [options] </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">file</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">|</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">directory</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">comman</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">d</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [command </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">args]</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> flock</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [options] </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">file</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">|</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">directory</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">-c</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">comman</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">d</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> flock</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [options] </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">file descriptor number</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Options:</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -s</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --shared</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">             get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> shared</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lock</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -x</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --exclusive</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">          get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> an</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> exclusive</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lock</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (default)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -u</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --unlock</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">             remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lock</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -n</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --nonblock</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">           fail</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rather</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> than</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> wait</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -w</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --timeout</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sec</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">s</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     wait</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> limited</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> amount</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> of</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> time</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -E</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --conflict-exit-code</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">numbe</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">r</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  exit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> code</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> after</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> conflict</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> or</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> timeout</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -o</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --close</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">              close</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> file</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> descriptor</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> before</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> running</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> command</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -c</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --command</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">comman</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">d</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> single</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> command</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> string</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> through</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> the</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> shell</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -h,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --help</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     display</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> this</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> help</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> and</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> exit</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -V,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  output</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> version</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> information</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> and</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> exit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">For</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> more</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> details</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> see</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> flock</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用它来实现我们上边说的“任务互斥”。可如下配置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># old </span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/10 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> /bin/bash do_somethings_with_long_time.sh </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># new </span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/10 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> flock -xn /tmp/my.lock -c </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/bin/bash do_somethings_with_long_time.sh </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>x 表示文件锁为互斥文件锁，这个参数可以省略，默认即为互斥文件锁。</li><li>n 表示当有任务执行时，直接退出，符合我们的逾期。</li></ul><p>除了上边的功能，大家还可以实现排队等待、共享锁等功能。可如下配置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 排队执行  每个任务等待 20s，超时则退出</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/10 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> flock -w 20 /tmp/my.lock -c </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/bin/bash do_somethings_with_long_time.sh </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 共享锁</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/10 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> flock -s /tmp/my.lock -c </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/bin/bash do_somethings_with_long_time.sh </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 忽略锁，直接执行</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/10 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> flock -u /tmp/my.lock -c </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/bin/bash do_somethings_with_long_time.sh </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 自定义退出码</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/10 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> flock -E 1 -w 20 /tmp/my.lock -c </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/bin/bash do_somethings_with_long_time.sh </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里需要注意，在自定义退出码时，尽量使用1位的数字，当使用多位数字时，会出现不是自定义的其他返回码。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li>https://linux.die.net/man/1/flock</li></ul>`,15)])])}const p=i(h,[["render",t]]),d=JSON.parse('{"path":"/pages/f9d39c/","title":"Linux基础系列 - flock 命令","lang":"zh-CN","frontmatter":{"title":"Linux基础系列 - flock 命令","tags":["Linux","运维知识库"],"permalink":"/pages/f9d39c/","createTime":"2023/09/08 17:36:02","description":"最近有这么一个场景，系统的定时任务执行时间长周期短，可能本周期执行时，上个周期的任务还没有执行完，这样便会造成相同的任务同一时间有过个任务进程在执行。如果任务有对互斥资源操作时，有可能产生死锁。 解决此问题这里有几种方法： 1、新增一个任务进程来控制任务的执行，每次启动新任务时，检测下是否有任务在执行。 2、使用Linux 系统自带的文件锁命令：flo...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux基础系列 - flock 命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-30T08:57:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pylixm.top/pages/f9d39c/"}],["meta",{"property":"og:site_name","content":"底层逻辑"}],["meta",{"property":"og:title","content":"Linux基础系列 - flock 命令"}],["meta",{"property":"og:description","content":"最近有这么一个场景，系统的定时任务执行时间长周期短，可能本周期执行时，上个周期的任务还没有执行完，这样便会造成相同的任务同一时间有过个任务进程在执行。如果任务有对互斥资源操作时，有可能产生死锁。 解决此问题这里有几种方法： 1、新增一个任务进程来控制任务的执行，每次启动新任务时，检测下是否有任务在执行。 2、使用Linux 系统自带的文件锁命令：flo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T08:57:49.000Z"}],["meta",{"property":"article:tag","content":"运维知识库"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:modified_time","content":"2025-09-30T08:57:49.000Z"}]]},"readingTime":{"minutes":1.91,"words":573},"git":{"createdTime":1759222669000,"updatedTime":1759222669000,"contributors":[{"name":"pylixm","username":"pylixm","email":"pyli.xm@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/pylixm?v=4","url":"https://github.com/pylixm"}]},"autoDesc":true,"filePathRelative":"05.运维/01.linux/06.Linux-flock.md","headers":[],"categoryList":[{"id":"8091bd","sort":5,"name":"运维"},{"id":"44c911","sort":1,"name":"linux"}]}');export{p as comp,d as data};
